version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    networks:
      - public
      - private

  frontend:
    build:
      context: front-end
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./front-end:/app
      - /app/node_modules
    networks:
      - public
    depends_on:
      - backend

  sqlite:
    image: nouchka/sqlite3
    volumes:
      - ./data:/data
    networks:
      - private

  tests:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["pytest", "--tb=short", "-p", "no:warnings"]
    volumes:
      - .:/app
    networks:
      - private
    depends_on:
      - backend
      - sqlite

  robot:
    build:
      context: ./software/tests/e2e
      dockerfile: Dockerfile
    volumes:
      - ./software/tests/e2e:/opt/robotframework/tests
      - ./software/tests/e2e/results:/opt/robotframework/reports
    networks:
      - public
    depends_on:
      - frontend
    entrypoint: ["robot"]
    command: ["/opt/robotframework/tests/test-cases/capture_image.robot", "--outputdir", "/opt/robotframework/reports"]

networks:
  public:
  private:
    driver: bridge
