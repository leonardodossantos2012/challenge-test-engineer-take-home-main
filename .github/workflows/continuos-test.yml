name: Continuous Integration

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          cd software
          docker-compose -f compose.yaml build
          docker-compose -f compose.yaml push

  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker images
        run: |
          cd software
          docker-compose -f compose.yaml pull

      - name: Run unit tests
        run: |
          cd software
          docker-compose run --rm backend pytest tests/unit

  integration-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker images
        run: |
          cd software
          docker-compose -f compose.yaml pull

      - name: Run integration tests
        run: |
          cd software
          docker-compose run --rm backend pytest tests/integration

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker images
        run: |
          cd software
          docker-compose -f compose.yaml pull

      - name: Set up Docker Compose
        run: |
          cd software
          docker-compose up -d backend frontend

      - name: Wait for services to be up
        run: sleep 30

      - name: Run E2E tests
        run: |
          cd software
          docker-compose run --rm robot

      - name: Tear down services
        run: docker-compose down

      - name: Upload Robot Framework results
        uses: actions/upload-artifact@v2
        with:
          name: robot-framework-results
          path: software/tests/e2e/results/
